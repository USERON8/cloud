services:
  # Elasticsearch
  elasticsearch:
    image: elasticsearch:9.1.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    ports:
      - "9201:9200"
      - "9301:9300"
    volumes:
      - type: bind
        source: D:\docker\elasticsearch\data
        target: /usr/share/elasticsearch/data
      - type: bind
        source: D:\docker\elasticsearch\logs
        target: /usr/share/elasticsearch/logs
    networks:
      - monitoring

  # Logstash
  logstash:
    image:
      logstash:9.1.2
    container_name: logstash
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
      - type: bind
        source: ../logs
        target: /app/logs
    networks:
      - monitoring

  # Kibana
  kibana:
    image:
      kibana:9.1.2
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
    networks:
      - monitoring

  # Prometheus
  prometheus:
    image: bitnami/prometheus:3.5.0-debian-12-r3
    container_name: prometheus
    ports:
      - "9099:9090"
    volumes:
      - type: bind
        source: ./prometheus
        target: /etc/prometheus
      - type: bind
        source: D:\docker\prometheus\data
        target: /prometheus
      - type: bind
        source: D:\docker\prometheus\logs
        target: /prometheus/logs
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  # Grafana
  grafana:
    image:
      grafana/grafana:12.2.0-17084981832
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: D:\docker\grafana\data
        target: /var/lib/grafana
      - type: bind
        source: D:\docker\grafana\logs
        target: /var/log/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring

volumes:
  elasticsearch_data:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge