server:
  port: 8081
spring:
  application:
    name: user-service
  main:
    allow-bean-definition-overriding: true
  cloud:
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:9876
      bindings:
        # 用户事件生产者绑定
        user-producer-out-0:
          destination: user-events
          content-type: application/json
          group: user-producer-group

        userLog-out-0:
          destination: LOG_USER_TOPIC
          content-type: application/json
          producer:
            partition-count: 4

    nacos:
      discovery:
        server-addr: localhost:8848
        username: nacos
        password: nacos
        namespace: public
        group: DEFAULT_GROUP
      config:
        server-addr: localhost:8848
        username: nacos
        password: nacos
        namespace: public
        file-extension: yaml
        group: DEFAULT_GROUP
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 10000
            loggerLevel: basic
      compression:
        request:
          enabled: true
        response:
          enabled: true
  config:
    import: optional:nacos:common
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/user_db?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: root
  data:
    redis:
      host: localhost
      port: 6379
      password: root
      database: 2
      timeout: 10000ms
      lettuce:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          # 通过网关访问 OAuth2.1 授权服务器的 JWK 端点
          jwk-set-uri: http://127.0.0.1:80/.well-known/jwks.json
          cache-duration: PT30M
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientAutoConfiguration,org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration
management:
  health:
    elasticsearch:
      enabled: false

# MinIO配置
minio:
  endpoint: http://localhost:9000
  access-key: minioadmin
  secret-key: minioadmin
  bucket-name: user-avatars
  public-endpoint: http://localhost:9000
logging:
  file:
    path: D:/logs/${spring.application.name}
    name: ${logging.file.path}/${spring.application.name}.log
  level:
    com.cloud: info
    org.springframework.security: warn
    org.springframework.web: warn
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  type-aliases-package: com.cloud.user.module.entity
  configuration:
    map-underscore-to-camel-case: true
    auto-mapping-behavior: full
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    enable-sql-runner: true
    db-config:
      id-type: assign_id
      logic-delete-field: deleted
      logic-not-delete-value: 0
      logic-delete-value: 1

# 用户服务专用配置
user:
  async:
    enabled: true
  notification:
    enabled: true
  statistics:
    enabled: true

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'user'
      paths-to-match: '/**'
      packages-to-scan: com.cloud.user.controller.user
    - group: 'merchant'
      paths-to-match: '/**'
      packages-to-scan: com.cloud.user.controller.merchant
    - group: 'admin'
      paths-to-match: '/**'
      packages-to-scan: com.cloud.user.controller.admin

knife4j:
  enable: true
  production: false
  basic:
    enable: false
  setting:
    language: ZH_CN