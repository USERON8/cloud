# ==================== 用户服务异步配置 ====================
# 此配置文件展示了用户服务的异步配置

app:
  async:
    # 启用异步功能
    enabled: true

    # 服务特定配置
    services:
      user:
        async:
          # 用户查询线程池配置（高并发查询）
          query:
            core-pool-size: 4
            max-pool-size: 16
            queue-capacity: 500
            keep-alive-seconds: 60
            thread-name-prefix: "user-query-"

          # 用户操作线程池配置（写操作）
          operation:
            core-pool-size: 2
            max-pool-size: 8
            queue-capacity: 200
            keep-alive-seconds: 60
            thread-name-prefix: "user-operation-"

          # 用户日志线程池配置
          log:
            core-pool-size: 2
            max-pool-size: 4
            queue-capacity: 800
            keep-alive-seconds: 60
            thread-name-prefix: "user-log-"

          # 用户统计线程池配置
          statistics:
            core-pool-size: 2
            max-pool-size: 4
            queue-capacity: 500
            keep-alive-seconds: 60
            thread-name-prefix: "user-statistics-"

          # 用户通知线程池配置
          notification:
            core-pool-size: 2
            max-pool-size: 6
            queue-capacity: 300
            keep-alive-seconds: 60
            thread-name-prefix: "user-notification-"

    # 通用配置
    common:
      # 启用监控
      monitoring-enabled: true
      monitoring-interval-seconds: 30

      # 启用任务装饰器
      task-decorator: true

      # 记录慢任务
      log-slow-tasks: true
      slow-task-threshold-ms: 3000

      # 告警阈值
      alert-threshold-usage-rate: 80.0
      alert-threshold-queue-rate: 85.0

# ==================== Spring Boot 配置 ====================
spring:
  task:
    execution:
      pool:
        core-size: 2
        max-size: 8
        queue-capacity: 100
        keep-alive: 60s
      thread-name-prefix: "user-spring-task-"

# ==================== 监控配置 ====================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,threadpool
  endpoint:
    threadpool:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      service: user-service
      profile: ${spring.profiles.active:default}

# ==================== 日志配置 ====================
logging:
  level:
    com.cloud.user.config.AsyncConfig: INFO
    com.cloud.common.threadpool: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{traceId:-}] [%X{userId:-}] %-5level %logger{36} - %msg%n"