server:
  port: 8086
  tomcat:
    threads:
      max: 200
      min-spare: 10
    max-connections: 8192
    accept-count: 100

spring:
  application:
    name: payment-service
  profiles:
    active: dev
    include: rocketmq  # 引入RocketMQ配置

  # Nacos 配置
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
        username: nacos
        password: nacos
        namespace: public
        group: DEFAULT_GROUP
      config:
        server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
        username: nacos
        password: nacos
        namespace: public
        file-extension: yaml
        group: DEFAULT_GROUP
    # OpenFeign 配置
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 10000
            loggerLevel: basic
      compression:
        request:
          enabled: true
        response:
          enabled: true

  # Config 配置
  config:
    import: optional:nacos:common

  # OAuth2 资源服务器配置
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://127.0.0.1:80/.well-known/jwks.json
          cache-duration: PT30M

# JWT 发行者配置
app:
  jwt:
    issuer: http://localhost:8080

# 统一权限管理配置
unified:
  security:
    enabled: true
    permission:
      # 动态权限更新间隔(秒)
      refresh-interval: 300
      # 权限缓存过期时间(秒)
      cache-ttl: 1800
      # 启用权限调试模式
      debug: false

# 日志配置
logging:
  file:
    path: ./payment-service/logs
    name: ${logging.file.path}/payment-service.log
  level:
    com.cloud: info
    org.springframework.security: warn
    org.springframework.web: warn

# MyBatis Plus 配置
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  type-aliases-package: com.cloud.payment.module.entity
  configuration:
    map-underscore-to-camel-case: true
    auto-mapping-behavior: full
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
  global-config:
    enable-sql-runner: true
    db-config:
      id-type: assign_id
      logic-delete-field: deleted
      logic-not-delete-value: 0
      logic-delete-value: 1

# 支付服务专用配置
payment:
  async:
    enabled: true
  notification:
    enabled: true
  statistics:
    enabled: true

# Redis 配置
redis:
  host: ${REDIS_HOST:127.0.0.1}
  port: ${REDIS_PORT:6379}
  password: ${REDIS_PASSWORD:root}
  database: ${REDIS_DATABASE:1}
  timeout: 10000
  lettuce:
    pool:
      max-active: 20
      max-wait: -1ms
      max-idle: 10
      min-idle: 2

# Redisson 配置
redisson:
  address: redis://${redis.host}:${redis.port}
  password: ${redis.password}
  database: ${redis.database}
  timeout: 10000
  connection-pool-size: 32
  connection-minimum-idle-size: 8
  idle-connection-timeout: 10000
  connect-timeout: 10000
  retry-attempts: 3
  retry-interval: 1000
  subscriptions-per-connection: 5
  client-name: payment-service

# 支付宝配置
alipay:
  app-id: ${ALIPAY_APP_ID:2021000122671234}  # 支付宝应用ID，生产环境使用环境变量
  merchant-private-key: ${ALIPAY_PRIVATE_KEY:MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC...}  # 应用私钥
  alipay-public-key: ${ALIPAY_PUBLIC_KEY:MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...}  # 支付宝公钥
  gateway-url: ${ALIPAY_GATEWAY_URL:https://openapi-sandbox.dl.alipaydev.com/gateway.do}  # 沙箱环境网关
  notify-url: ${ALIPAY_NOTIFY_URL:http://localhost:8084/api/v1/payment/alipay/notify}  # 异步通知地址
  return-url: ${ALIPAY_RETURN_URL:http://localhost:3000/payment/success}  # 同步跳转地址
  sign-type: RSA2
  charset: UTF-8
  format: json
  timeout: 30m  # 支付超时时间

# SpringDoc 配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'payment-manage'
      paths-to-match: '/api/v1/payment/manage/**'
    - group: 'payment-query'
      paths-to-match: '/api/v1/payment/query/**'
    - group: 'payment-operation'
      paths-to-match: '/api/v1/payment/operation/**'

# Knife4j 配置
knife4j:
  enable: true
  production: false
  basic:
    enable: false
  setting:
    language: ZH_CN
# Spring Boot Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
    enabled-by-default: true
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
    nacos:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true