server:
  port: ${server.port}
spring:
  application:
    name: ${spring.application.name}
  profiles:
    active: dev
  cloud:
    nacos:
      discovery:
        server-addr: ${nacos.discovery.server-addr}
        username: ${nacos.discovery.username}
        password: ${nacos.discovery.password}
        namespace: ${nacos.discovery.namespace}
        group: ${nacos.discovery.group}
      config:
        server-addr: ${nacos.config.server-addr}
        username: ${nacos.config.username}
        password: ${nacos.config.password}
        namespace: ${nacos.config.namespace}
        file-extension: ${nacos.config.file-extension}
        group: ${nacos.config.group}
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:39876
      bindings:
        paymentLog-out-0:
          destination: LOG_PAYMENT_TOPIC
          content-type: application/json
          producer:
            partition-count: 4
        paymentToOrder-out-0:
          destination: PAYMENT_TO_ORDER_TOPIC
          content-type: application/json
        paymentToStock-out-0:
          destination: PAYMENT_TO_STOCK_TOPIC
          content-type: application/json
        orderToPayment-in-0:
          destination: ORDER_TO_PAYMENT_TOPIC
          content-type: application/json
          group: payment-order-group
        # 支付事件生产者绑定（新增）
        payment-producer-out-0:
          destination: payment-events
          content-type: application/json
          group: payment-producer-group
          producer:
            maxRequestSize: 4194304
            sync: true
  config:
    import: optional:nacos:common
  datasource:
    driver-class-name: ${spring.datasource.driver-class-name}
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
  data:
    redis:
      host: ${spring.redis.host}
      port: ${spring.redis.port}
      password: ${spring.redis.password}
      database: ${spring.redis.database}
      timeout: ${spring.redis.timeout}
      lettuce:
        pool:
          max-active: ${spring.redis.lettuce.pool.max-active}
          max-wait: ${spring.redis.lettuce.pool.max-wait}
          max-idle: ${spring.redis.lettuce.pool.max-idle}
          min-idle: ${spring.redis.lettuce.pool.min-idle}
  security:
    oauth2:
      resourceserver:
        jwt:
          # 通过网关访问 OAuth2.1 授权服务器的 JWK 端点
          jwk-set-uri: http://127.0.0.1:80/.well-known/jwks.json
          cache-duration: PT30M
logging:
  file:
    path: D:/logs/${spring.application.name}
    name: ${logging.file.path}/${spring.application.name}.log
  level:
    com.cloud.user.mapper: TRACE
# SpringDoc OpenAPI 配置
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  group-configs:
    - group: 'payment-manage'
      paths-to-match: '/api/v1/payment/manage/**'
    - group: 'payment-query'
      paths-to-match: '/api/v1/payment/query/**'
    - group: 'payment-operation'
      paths-to-match: '/api/v1/payment/operation/**'

# Knife4j 配置
knife4j:
  enable: true
  production: false
  basic:
    enable: false
  setting:
    language: ZH_CN
  insight:
    service-name: ${spring.application.name}

springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  default-flat-param-object: true

mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  type-aliases-package: com.cloud.payment.module.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: assign_id
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0