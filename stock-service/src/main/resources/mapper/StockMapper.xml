<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.stock.mapper.StockMapper">

    <resultMap id="BaseResultMap" type="com.cloud.stock.module.entity.Stock">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="productId" column="product_id" jdbcType="BIGINT"/>
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
        <result property="stockQuantity" column="stock_quantity" jdbcType="INTEGER"/>
        <result property="frozenQuantity" column="frozen_quantity" jdbcType="INTEGER"/>
        <result property="stockStatus" column="stock_status" jdbcType="INTEGER"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, product_id, product_name, stock_quantity, frozen_quantity, stock_status, version, created_at, updated_at
    </sql>

    <select id="getByProductId" resultMap="BaseResultMap">
        select 
            <include refid="Base_Column_List"/>
        from stock
        where product_id = #{productId} and deleted = 0
    </select>
    
    <select id="pageQuery" resultMap="BaseResultMap">
        SELECT 
            <include refid="Base_Column_List"/>
        FROM 
            stock
        <where>
            deleted = 0
            <if test="query.productName != null and query.productName != ''">
                AND product_name LIKE CONCAT('%', #{query.productName}, '%')
            </if>
            <if test="query.productId != null">
                AND product_id = #{query.productId}
            </if>
        </where>
        ORDER BY updated_at DESC
    </select>
</mapper>