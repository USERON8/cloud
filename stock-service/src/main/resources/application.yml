server:
  port: 8083

spring:
  application:
    name: stock-service
  profiles:
    active: dev
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        namespace: public
        group: DEFAULT_GROUP
      config:
        server-addr: localhost:8848
        namespace: public
        group: DEFAULT_GROUP
        file-extension: yml
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 10000
            loggerLevel: basic
      compression:
        request:
          enabled: true
        response:
          enabled: true
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:39876
      bindings:
        stockUpdate-out-0:
          destination: STOCK_UPDATE_TOPIC
          content-type: application/json
        stockToOrder-out-0:
          destination: STOCK_TO_ORDER_TOPIC
          content-type: application/json
        orderToStock-in-0:
          destination: ORDER_TO_STOCK_TOPIC
          content-type: application/json
          group: stock-order-group
        paymentToStock-in-0:
          destination: PAYMENT_TO_STOCK_TOPIC
          content-type: application/json
          group: stock-payment-group
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/stock_db?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      connection-timeout: 30000
      max-lifetime: 1800000
  data:
    redis:
      host: localhost
      port: 6379
      database: 2
      password:
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 20
          max-wait: -1ms
          max-idle: 8
          min-idle: 0
  security:
    oauth2:
      resourceserver:
        jwt:
          # 通过网关访问 OAuth2.1 授权服务器的 JWK 端点
          jwk-set-uri: http://127.0.0.1:80/.well-known/jwks.json
          cache-duration: PT30M
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: assign_id
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.cloud.stock.module.entity

logging:
  level:
    com.cloud.stock: DEBUG
    org.springframework.security: DEBUG
    org.springframework.data.redis: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: logs/stock-service.log
    max-size: 100MB
    max-history: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'stock-manage'
      paths-to-match: '/stock/manage/**'
      packages-to-scan: com.cloud.stock.controller
    - group: 'stock-query'
      paths-to-match: '/stock/query/**'
      packages-to-scan: com.cloud.stock.controller

# SpringDoc OpenAPI 配置
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  group-configs:
    - group: 'stock-manage'
      paths-to-match: '/api/v1/stock/manage/**'
    - group: 'stock-query'
      paths-to-match: '/api/v1/stock/query/**'

# Knife4j 配置
knife4j:
  enable: true
  production: false
  basic:
    enable: false
  setting:
    language: ZH_CN