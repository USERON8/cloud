server:
  port: 80
spring:
  application:
    name: gateway
  main:
    allow-bean-definition-overriding: true
  profiles:
    include: route,api
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      csrf:
        enabled: true
      # 全局CORS配置
      globals:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns:
              - "http://localhost:*"
              - "http://127.0.0.1:*"
              - "https://*.yourdomain.com"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "Authorization"
              - "Content-Type"
              - "Accept"
              - "X-Requested-With"
            allowCredentials: true
            maxAge: 3600
      
      # 默认过滤器 - 应用安全过滤器到所有路由
      default-filters:
        - name: Security
          args:
            enableIpCheck: true
            enableRateLimit: true
            enableTokenCheck: true
            enablePerformanceMonitoring: true
    nacos:
      discovery:
        server-addr: localhost:8848
        username: nacos
        password: nacos
        namespace: public
        group: DEFAULT_GROUP
      config:
        server-addr: localhost:8848
        username: nacos
        password: nacos
        namespace: public
        file-extension: yaml
        group: DEFAULT_GROUP
  config:
    import: optional:nacos:common
  data:
    redis:
      host: localhost
      port: 6379
      password: root
      database: 6
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 16
          max-wait: -1ms
          max-idle: 8
          min-idle: 2
  web:
    resources:
      static-locations: classpath:/static/
  security:
    oauth2:
      resourceserver:
        jwt:
          # 通过网关访问auth-service的JWK端点，实现OAuth2.1标准架构
          jwk-set-uri: http://127.0.0.1:80/.well-known/jwks.json
          issuer-uri: http://127.0.0.1:80
    headers:
      content-security-policy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:"
      xss-protection-enabled: true
      x-frame-options:
        mode: DENY
      cache-control: true
      content-type-options: true
      referrer-policy: "no-referrer-when-downgrade"
  level:
    com.cloud: INFO
    com.alibaba.nacos: WARN
    org.springframework.cloud.gateway: INFO
    org.springframework.security: WARN
# SpringDoc 配置已移除，使用 Knife4j 进行文档聚合

# Knife4j 网关服务发现聚合配置
knife4j:
  enable: true
  production: false
  basic:
    enable: false
  setting:
    language: ZH_CN
    enable-version: true
    enable-swagger-models: true
    swagger-model-name: 实体类列表
    enable-footer-custom: true
    footer-custom-content: "Cloud 微服务平台 API 文档"
  gateway:
    # 启用网关聚合功能
    enabled: true
    # 使用服务发现策略
    strategy: discover
    discover:
      enabled: true
      version: openapi3
      # 排除gateway服务本身
      excluded-services: 
        - gateway
      # 服务发现配置
      service-config:
        auth-service:
          group-name: 认证服务
          api-docs-path: /v3/api-docs
        user-service:
          group-name: 用户服务  
          api-docs-path: /v3/api-docs
